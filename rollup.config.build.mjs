import typescript from '@rollup/plugin-typescript';
import { nodeResolve } from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import terser from "@rollup/plugin-terser";
import json from '@rollup/plugin-json';
import webWorkerLoader from '@colingm/rollup-plugin-web-worker-loader';
import del from 'rollup-plugin-delete';
import copy from 'rollup-plugin-copy';

const banner =
    `/*
THIS IS A GENERATED/BUNDLED FILE CREATED USING ROLLUP
If you want to view the source, please visit the github repository of this plugin
https://github.com/joethei/obsidian-tts
*/
`;

export default {
  input: 'src/main.ts',
  output: {
    dir: '.',
	banner: banner,
    sourcemap: 'inline',
    format: 'cjs',
    exports: 'default'
  },
  external: ['obsidian', 'electron'],
  plugins: [
    typescript({ tsconfig: './tsconfig.json', exclude: ['**/*.d.ts'] }),
    nodeResolve({browser: true}),
    commonjs(),
    // terser(),
	json(),
	webWorkerLoader({ targetPlatform: 'browser' }),
	copy({
		targets: [{
			src: 'node_modules/@soundtouchjs/audio-worklet/dist/soundtouch-worklet.js',
			dest: 'src'
		}],
		hook: 'buildStart'
	}),
	del({
		targets: 'src/soundtouch-worklet.js',
		hook: 'buildEnd'
	})
  ],
  onwarn: function(warning, warner) {
	if (warning.id && /node_modules/.test(warning.id)) return;
	if (warning.ids && warning.ids.every((id) => /node_modules/.test(id)))
		return;

	warner(warning);
  }
};
